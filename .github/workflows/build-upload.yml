name: Build SplinePSF and upload to Anaconda Cloud

on:
  # build on every push or pull request; on release (edit or publish/save,
  #  not create), we'll do an uploads as well
  push:
  # pull_request:
  # release:
  #   types: [edited, published]

jobs:
  # --------------- Linux ---------------
  # build-linux:
  #   runs-on: ubuntu-latest

  #   env:
  #       FILENAMES: temp-filenames.txt

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Install conda build libraries
  #     # for Linux, we can use the provided conda
  #     run: |
  #       $CONDA/bin/conda install conda-build anaconda-client

  #   - name: Build SplinePSF
  #     # build and save the filenames for upload
  #     run: |
  #       cd ./dist_tools/conda
  #       $CONDA/bin/conda-build -c conda-forge spline
  #       $CONDA/bin/conda-build -c conda-forge spline --output > $FILENAMES

  #   - name: Upload to Anaconda Cloud
  #     if: github.event.release
  #     env:
  #       ANACONDA_TOKEN: ${{ secrets.TURAGALAB_ANACONDA_TOKEN }}
  #     run: |
  #       cd ./dist_tools/conda
  #       while read NAME; do
  #         $CONDA/bin/anaconda -t $ANACONDA_TOKEN upload -u Turagalab $NAME
  #       done < $FILENAMES

  build-linux-pip:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        environment-file: python/environment.yml
        python-version: 3.7
        auto-activate-base: false
        activate-environment: spline_dev

    - name: Build SplinePSF (pip)
      id: pip-build
      shell: bash -l {0}
      run: |
        echo $CUDACXX
        which nvcc

        export CUDACXX=`which nvcc`
        echo $CUDACXX

        export CMAKE_CUDA_COMPILER=`which nvcc`
        echo $CMAKE_CUDA_COMPILER

        cd ./python
        pip install wheel
        python setup.py bdist_wheel
        WHEEL=$(ls dist)
        echo "::set-output name=wheel_filename::$WHEEL"

    - name: Upload to GitHub release
      if: github.event.release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./python/dist/${{ steps.pip-build.outputs.wheel_filename }}
        asset_name: ${{ steps.pip-build.outputs.wheel_filename }}
        asset_content_type: binary/octet-stream



  # --------------- Mac ---------------
  # build-macos:
  #   runs-on: macos-latest

  #   env:
  #       FILENAMES: temp-filenames.txt

  #   steps:
  #   - uses: actions/checkout@v2

  #   - uses: conda-incubator/setup-miniconda@v2
  #     # for Mac, the built-in conda has permissions issues;
  #     #   we use a third-party action instead; note we need to
  #     #   use the "bash -l {0}" shell to ensure login files are run
  #     #   so conda env vars will be set
  #     with:
  #       auto-update-conda: true
  #       python-version: 3.7

  #   - name: Install conda build libraries
  #     shell: bash -l {0}
  #     run: |
  #       conda install conda-build anaconda-client

  #   - name: Choose Mac OS SDK
  #     run: sudo xcode-select --switch /Applications/Xcode_11.5.app/Contents/Developer

  #   - name: Build SplinePSF
  #     # build and save filenames for upload
  #     shell: bash -l {0}
  #     run: |
  #       cd ./dist_tools/conda

  #       echo $CONDA
  #       echo $PATH
  #       which conda
  #       which conda-build
  #       which anaconda

  #       conda-build -c conda-forge spline
  #       conda-build -c conda-forge spline --output > $FILENAMES

  #   - name: Upload to Anaconda Cloud
  #     if: github.event.release
  #     env:
  #       ANACONDA_TOKEN: ${{ secrets.TURAGALAB_ANACONDA_TOKEN }}
  #     shell: bash -l {0}
  #     run: |
  #       echo $CONDA
  #       echo $PATH
  #       which conda
  #       which conda-build
  #       which anaconda

  #       cd ./dist_tools/conda
  #       while read NAME; do
  #         anaconda -t $ANACONDA_TOKEN upload -u Turagalab $NAME
  #       done < $FILENAMES

  # --------------- Windows ---------------
  # build-windows:
  #   runs-on: windows-latest

  #   env:
  #     FILENAMES: temp-filenames.txt

  #   steps:
  #   - uses: actions/checkout@v2

  #   - uses: conda-incubator/setup-miniconda@v2
  #     # as with Mac, easier to use the third-party setup
  #     with:
  #       auto-update-conda: true
  #       python-version: 3.7

  #   - name: Install conda build libraries
  #     shell: powershell
  #     run: |
  #       conda install conda-build anaconda-client

  #   - name: Build SplinePSF
  #     # build and save filenames for upload
  #     shell: powershell
  #     run: |
  #       Set-Location -Path .\dist_tools\conda
  #       conda-build -c conda-forge spline
  #       conda-build -c conda-forge spline --output > $Env:FILENAMES

  #   - name: Upload to Anaconda Cloud
  #     if: github.event.release
  #     env:
  #       ANACONDA_TOKEN: ${{ secrets.TURAGALAB_ANACONDA_TOKEN }}
  #     shell: powershell
  #     run: |
  #       Set-Location -Path .\dist_tools\conda
  #       foreach($PATH in Get-Content -path $Env:FILENAMES) {
  #         anaconda -t $Env:ANACONDA_TOKEN upload -u Turagalab $PATH
  #       }
